@model IEnumerable<SupportTicket>
@{
    ViewData["Title"] = "Manage Tickets";
}

<style>
    /* Container and table styling */
    .dashboard-table {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
        background-color: #fff;
        border: 1px solid #e3e6f0;
    }

        .dashboard-table thead {
            background: linear-gradient(90deg, #4e73df, #224abe);
            color: #fff;
            font-weight: 700;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.05em;
        }

            .dashboard-table thead th {
                border: none;
                padding: 16px 20px;
                white-space: nowrap;
            }

        .dashboard-table tbody tr {
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: default;
        }

            .dashboard-table tbody tr:hover {
                background-color: #f8f9fc;
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(78, 115, 223, 0.15);
            }

        .dashboard-table tbody td {
            padding: 14px 20px;
            vertical-align: middle;
            font-size: 0.9rem;
            color: #3a3b45;
            border-top: 1px solid #e3e6f0;
            white-space: nowrap;
        }

            .dashboard-table tbody td.fw-bold {
                color: #224abe;
            }

    /* Badge styling */
    .badge.bg-primary {
        background-color: #4e73df !important;
        color: #fff;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-info {
        background-color: #36b9cc !important;
        color: #212529 !important;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-success {
        background-color: #1cc88a !important;
        color: #fff;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-dark {
        background-color: #5a5c69 !important;
        color: #fff;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-danger {
        background-color: #e74a3b !important;
        color: #fff;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-warning {
        background-color: #f6c23e !important;
        color: #212529 !important;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    .badge.bg-secondary {
        background-color: #858796 !important;
        color: #fff;
        font-weight: 600;
        padding: 0.35em 0.65em;
        border-radius: 0.375rem;
        font-size: 0.85rem;
    }

    /* Search box styling */
    .search-box {
        max-width: 320px;
        margin-bottom: 20px;
        border-radius: 12px;
        padding-left: 40px;
        font-size: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border: 1px solid #ced4da;
        background: url('data:image/svg+xml;utf8,<svg fill="gray" height="16" viewBox="0 0 24 24" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M21 21l-4.35-4.35M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16z"/></svg>') no-repeat 12px center;
        background-size: 16px 16px;
    }

        .search-box:focus {
            outline: none;
            border-color: #4e73df;
            box-shadow: 0 0 8px rgba(78, 115, 223, 0.5);
            background-color: #fff;
        }

    /* Custom circular buttons */
    .custom-btn {
        width: 42px;
        height: 38px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
        transition: all 0.25s ease-in-out;
        font-size: 1.2rem;
        cursor: pointer;
        border: 1px solid transparent;
        background-color: transparent;
        color: inherit;
    }

    .btn-details {
        border-color: #0dcaf0;
        color: #0dcaf0;
    }

    .btn-reply {
        border-color: #198754;
        color: #198754;
    }

    .btn-details:hover {
        background-color: #0dcaf0;
        color: white;
    }

    .btn-reply:hover {
        background-color: #198754;
        color: white;
    }
</style>

<div class="mt-3">
    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-3">
        <input id="TicketSearch" type="text" class="form-control search-box" placeholder="Search tickets..." />
    </div>

    <div class="table-responsive dashboard-table">
        <table class="table align-middle text-center mb-0" id="TicketTable">
            <thead>
                <tr>
                    <th>From</th>
                    <th>Email</th>
                    <th>Issue Description</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model)
                {
                    <tr>
                        <td class="fw-bold">@ticket.SenderName</td>
                        <td class="fw-bold">@ticket.SenderEmail</td>
                        <td>@ticket.IssueDescription</td>
                        <td>
                            @if (ticket.Status == TicketStatus.Open)
                            {
                                <span class="badge bg-primary">Open</span>
                            }
                            else if (ticket.Status == TicketStatus.InProgress)
                            {
                                <span class="badge bg-info text-dark">In Progress</span>
                            }
                            else if (ticket.Status == TicketStatus.Resolved)
                            {
                                <span class="badge bg-success">Resolved</span>
                            }
                            else
                            {
                                <span class="badge bg-dark">Closed</span>
                            }
                        </td>
                        <td>
                            @if (ticket.Priority == TicketPriority.High)
                            {
                                <span class="badge bg-danger">High</span>
                            }
                            else if (ticket.Priority == TicketPriority.Medium)
                            {
                                <span class="badge bg-warning text-dark">Medium</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Low</span>
                            }
                        </td>
                        <td class="table-actions d-flex justify-content-center gap-2">
                            <a href="@Url.Action("Details", "SupportTicket", new { id = ticket.Id, area = "Admin" })"
                               class="custom-btn btn-details"
                               title="Details">
                                <i class="bi bi-eye-fill"></i>
                            </a>
                            <a href="@Url.Action("Reply", "SupportTicket", new { id = ticket.Id, area = "Admin" })"
                               class="custom-btn btn-reply"
                               title="Reply">
                                <i class="bi bi-reply-fill"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(function () {
            @* Success Message *@
            @if (TempData["success-notification"] != null)
            {
                    <text>
                        toastr.success('@TempData["success-notification"]');
                    </text>
            }

            @* Error Message *@
            @if (TempData["error-notification"] != null)
            {
                    <text>
                        toastr.error('@TempData["error-notification"]');
                    </text>
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Search filter
            const searchInput = document.getElementById('TicketSearch');
            if (searchInput) {
                searchInput.addEventListener('keyup', function () {
                    const searchText = this.value.toLowerCase();
                    const rows = document.querySelectorAll('#TicketTable tbody tr');
                    rows.forEach(row => {
                        row.style.display = row.textContent.toLowerCase().includes(searchText) ? '' : 'none';
                    });
                });
            }
        });
    </script>
}

