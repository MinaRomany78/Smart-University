@model IEnumerable<Entities.ViewModel.TaskSubmissionVM>
@using Entities.Models
@{
    ViewData["Title"] = "Submissions";
    Layout = "~/Views/Shared/_CourseLayout.cshtml";
    var color = ViewData["Color"]?.ToString() ?? "#0d6efd";
    var taskTitle = ViewData["TaskTitle"]?.ToString() ?? "Task";
}

<div class="container mt-4" style="max-width: 1100px;">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold d-flex align-items-center" style="color:@color;">
            <i class="bi bi-people me-2"></i> Submissions - @taskTitle
        </h3>

        <a asp-action="Tasks"
           asp-route-courseId="@ViewData["CourseId"]"
           asp-route-color="@color"
           class="btn btn-sm btn-outline-secondary rounded-pill">
            <i class="bi bi-arrow-left me-1"></i> Back to Tasks
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive shadow-sm rounded-4">
            <table class="table align-middle table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Student</th>
                        <th>Submission Date</th>
                        <th>Status</th>
                        <th>Grade</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var submission in Model)
                    {
                        <tr>
                            <td class="fw-semibold">@submission.StudentName</td>
                            <td>@submission.SubmissionDate.ToString("MMM dd, yyyy - HH:mm")</td>
                            <td>
                                <span class="badge
                                            @(submission.Status == SubmissionStatus.OnTime ? "bg-success" :
                                                                            submission.Status == SubmissionStatus.Late ? "bg-danger" : "bg-warning text-dark")">
                            @submission.Status
                        </span>
                    </td>
                    <td>
                        @if (submission.Grade.HasValue)
                                {
                                    <span class="badge bg-primary-subtle text-primary p-2 rounded-pill">
                                        <i class="bi bi-award me-1"></i> @submission.Grade
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning-subtle text-dark p-2 rounded-pill">
                                        <i class="bi bi-exclamation-circle me-1"></i> No grade
                                    </span>
                                }
                            </td>
                            <td class="text-center">
                                <div class="d-flex gap-2 justify-content-center">
                                    <a href="@submission.SubmissionLink" target="_blank"
                                       class="btn btn-sm btn-outline-primary rounded-pill">
                                        <i class="bi bi-box-arrow-up-right"></i>
                                    </a>

                                    <!-- Edit/Add Grade -->
                                    <button class="btn btn-sm btn-dynamic rounded-pill"
                                            data-bs-toggle="modal"
                                            data-bs-target="#gradeModal"
                                            data-submission-id="@submission.SubmissionId"
                                            data-task-id="@submission.TaskId"
                                            data-course-id="@submission.CourseId"
                                            data-current-grade="@submission.Grade">
                                        <i class="bi bi-pencil-square me-1"></i>
                                        @(submission.Grade.HasValue ? "Edit" : "Add")
                                    </button>

                                    <!-- Add Feedback -->
                                    <button class="btn btn-sm btn-outline-dynamic rounded-pill"
                                            data-bs-toggle="modal"
                                            data-bs-target="#feedbackModal"
                                            data-task-id="@submission.TaskId"
                                            data-student-id="@submission.StudentId"
                                            data-course-id="@submission.CourseId">
                                        <i class="bi bi-chat-dots me-1"></i> Feedback
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="card text-center p-5 shadow-sm rounded-4">
            <i class="bi bi-inboxes fs-1 text-muted mb-3"></i>
            <p class="fs-5 text-muted">No submissions yet.</p>
        </div>
    }
</div>

<!-- Modal: Grade -->
<div class="modal fade" id="gradeModal" tabindex="-1" aria-labelledby="gradeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title" id="gradeModalLabel">Add/Edit Grade</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="UpdateGrade" method="post">
                <div class="modal-body">
                    <input type="hidden" name="submissionId" id="modalSubmissionId" />
                    <input type="hidden" name="taskId" id="modalTaskId" />
                    <input type="hidden" name="courseId" id="modalCourseId" />
                    <input type="hidden" name="color" value="@color" />

                    <div class="mb-3">
                        <label for="modalGrade" class="form-label">Grade</label>
                        <input type="number" name="grade" step="0.5" min="0" max="100"
                               class="form-control" id="modalGrade" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary rounded-pill" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-dynamic rounded-pill">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal: Feedback -->
<div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title" id="feedbackModalLabel">Add Feedback</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="AddFeedback" asp-controller="Task" asp-area="Customer" method="post">
                <div class="modal-body">
                    <input type="hidden" name="taskId" id="feedbackTaskId" />
                    <input type="hidden" name="studentId" id="feedbackStudentId" />
                    <input type="hidden" name="courseId" id="feedbackCourseId" />
                    <input type="hidden" name="color" value="@color" />

                    <div class="mb-3">
                        <label for="feedbackRating" class="form-label">Rating</label>
                        <input type="number" name="rating" min="1" max="5" step="1"
                               class="form-control" id="feedbackRating" placeholder="1-5" />
                    </div>

                    <div class="mb-3">
                        <label for="feedbackComment" class="form-label">Comment</label>
                        <textarea name="comment" class="form-control" id="feedbackComment" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary rounded-pill" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-dynamic rounded-pill">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .btn-dynamic {
            background-color: @color;
            border: none;
            color: #fff;
            transition: all 0.2s ease-in-out;
        }

            .btn-dynamic:hover {
                opacity: 0.9;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            }

        .btn-outline-dynamic {
            border: 1.5px solid @color;
            color: @color;
        }

            .btn-outline-dynamic:hover {
                background-color: @color;
                color: #fff;
            }
    </style>
}

@section Scripts {
    <script>
        // Grade Modal
        const gradeModal = document.getElementById('gradeModal');
        gradeModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            document.getElementById('modalSubmissionId').value = button.getAttribute('data-submission-id');
            document.getElementById('modalTaskId').value = button.getAttribute('data-task-id');
            document.getElementById('modalCourseId').value = button.getAttribute('data-course-id');
            document.getElementById('modalGrade').value = button.getAttribute('data-current-grade') || '';
        });

        // Feedback Modal
        const feedbackModal = document.getElementById('feedbackModal');
        feedbackModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            document.getElementById('feedbackTaskId').value = button.getAttribute('data-task-id');
            document.getElementById('feedbackStudentId').value = button.getAttribute('data-student-id');
            document.getElementById('feedbackCourseId').value = button.getAttribute('data-course-id');
        });
    </script>
}
